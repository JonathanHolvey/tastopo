#! /usr/bin/env python3

"""TasTopo - Generate printable topographic maps from TheList mapping service

Usage: tastopo generate [options] <location>

Options:
    -h --help         - Show this help message
    --version         - Show version information
    --scale <ratio>   - Specify the scale of the printed map [default: 25000]
    --zoom <offset>   - Increase or decrease the size of map details [default: 0]
    --title <text>    - Set the title on the map sheet, instead of the location name
    --paper <size>    - Specify the paper size for printing [default: A4]
    --portrait        - Orientate the map in portrait, rather than landscape
    --no-grid         - Disable the rendering of a scale grid on the map
    --format <type>   - The file format to export; either PDF or SVG [default: PDF]
    --out <filename>  - Override the default export file naming

Map location
    The <location> argument is used to specify the centre of the map. This argument
    can take the form of a place name or a geo URI. Examples:
    - 'South East Cape'
    - 'geo:-43.643611,146.8275'
"""

from docopt import docopt, DocoptExit

from src import listmap
from src.map import Sheet, Image
from src.layout import Layout
from src.export import export_map, clean_filename


__version__ = '0.0.0'


if __name__ == '__main__':
    version = f'v{__version__}'
    try:
        args = docopt(__doc__, version=f'TasTopo {version}', help=False)
    except DocoptExit:
        args = docopt(__doc__ + '\n    --debug')

    try:
        location = listmap.Location(args.get('<location>'))

        sheet = Sheet(args.get('--paper'), args.get('--portrait'))
        image = Image(location, sheet, args.get('--scale'), args.get('--zoom'))

        layout = Layout(sheet, location, image, args.get('--title'))
        layout.grid = not args.get('--no-grid')
        layout.details['version'] = version
        svg = layout.compose()

        filename = args.get('--out') or f'TasTopo - {clean_filename(layout.title)}'
        export_map(svg, args.get('--format'), filename)

    except Exception as error:
        if args.get('--debug'):
            raise
        print(error)
        exit(1)
