#! /usr/bin/env python3

"""TasTopo - Generate printable topographic maps from TheList mapping service

Usage: tastopo generate [options] <location>

Options:
    -h --help        - Show this help message
    --version        - Show version information
    --scale <ratio>  - Specify the scale of the printed map [default: 25000]
    --title <text>   - Set the title on the map sheet, instead of the location name
    --paper <size>   - Specify the paper size for printing [default: A4]
    --portrait       - Orientate the map in portrait, rather than landscape
    --no-grid        - Disable the rendering of a scale grid on the map
    --format <type>  - The file format to export; either PDF or SVG [default: PDF]

Map location
    The <location> argument is used to specify the centre of the map. This argument
    can take the form of a place name or a geo URI. Examples:
    - 'South East Cape'
    - 'geo:-43.643611,146.8275'
"""

from docopt import docopt
from lxml import etree
from svglib.svglib import SvgRenderer
from reportlab.graphics import renderPDF

from src import mapping
from src.layout import Layout


__version__ = '0.0.0'


def export_map(svg, filetype):
    """Export a map document"""
    filetype = filetype.casefold()
    if filetype == 'svg':
        with open('map.svg', 'wb') as f:
            f.write(etree.tostring(svg))
        return
    if filetype == 'pdf':
        renderer = SvgRenderer(None)
        drawing = renderer.render(svg)
        renderPDF.drawToFile(drawing, 'map.pdf')
        return

    raise ValueError(f'Format \'{filetype}\' not suppported')


if __name__ == '__main__':
    version = f'v{__version__}'
    args = docopt(__doc__, version=f'TasTopo {version}')

    location = mapping.Location(args.get('<location>'))

    sheet = mapping.Sheet(args.get('--paper'), args.get('--portrait'))
    image = mapping.Image(location, sheet, args.get('--scale'))

    layout = Layout(sheet, location, image, args.get('--title'))
    layout.grid = not args.get('--no-grid')
    layout.details['version'] = version
    svg = layout.compose()

    export_map(svg, args.get('--format'))
